{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome Verteilen Documentation","text":"<p>Verteilen is a cluster computing application which provide friendly user interface to control with</p>"},{"location":"#application-info","title":"Application info","text":"<ul> <li>Platform Support: Windows / Linux</li> <li>Programming Language: Typescript</li> <li>Framework: NodeJS, Electron, Vue, Vuetify</li> <li>Script Language: JS</li> <li>Author: Elly</li> </ul>"},{"location":"dev/installation/","title":"Installation","text":"<p>You must join the verteilen dev team to access the source code</p>"},{"location":"dev/installation/#setup","title":"Setup","text":"<p>User below commands to setup the project folder</p> <pre><code>git clone https://github.com/Verteilen/Verteilen.git\ncd Verteilen\nbun install\nbun dev\n</code></pre> <p>After the build is setup, you can use below commands to do sort of things</p>"},{"location":"dev/installation/#actions","title":"Actions","text":"<p>Open electron debug mode with Hot reload</p> <pre><code>npm run dev\n</code></pre> <p>Host static web</p> <pre><code>npm run web\n</code></pre> <p>Open express server and hosting it as backend</p> <pre><code>npm run express\n</code></pre> <p>Compute node build</p> <pre><code>npm run build:node\nnpm run docker:node-f\n</code></pre> <p>Compute server build</p> <pre><code>npm run build:server\nnpm run docker:server-f\n</code></pre>"},{"location":"dev/structure/","title":"Project Structure","text":""},{"location":"user/console/","title":"Console","text":""},{"location":"user/core/","title":"Concept","text":"<p>Let say for example, you have 5 power computers, And a project so big which require days to finish its works  Such as 3D Rendering, or Video transcoding, or Large data sorting.</p> <p>Sure, You can keep vertical scaling, until it's too expensive to do it. when you hit the critical point.  You might considering horizontal scaling, which now you need a way to manage multiple computers</p>"},{"location":"user/core/#use-blender-for-example","title":"Use Blender For Example","text":"<p>Let say there is a video file needs to export to mp4 file, video length is near 1 hour and the scene contain VFX or fluid computing</p> <p>In this case you can seperate the render to multiple fragment, 5 mins per .mp4 file  In the end, you output folder will contain multiple videos</p> <p>During the renderering, you can tell multiple computers to render different timespan  Then combine them in the end</p>"},{"location":"user/example/","title":"Example Template","text":"<p>The purpose of this template is to show all the features this application support</p> Compute Guide   ## Function Call  ## JS Script  ## CronJob  ## CronJob + Multicore"},{"location":"user/installation/","title":"Installation","text":""},{"location":"user/installation/#static-web","title":"Static Web","text":"<p>Which you do not need to install anything, you can just click here to use it</p> <p>No Advanced Features</p> <p>Static Web mode means there is no backend attach to it  It will only contain core feature</p> <p>Browser Cannot Close</p> <p>You cannot close browser, before your task finish  All the compute node will disconnect, because all the websocket instance is hold in the browser code</p>"},{"location":"user/installation/#compute-node-install","title":"Compute Node Install","text":"<p>Install the nodejs module in the global for compute node  use npm install the compute tool node</p> <pre><code>npm install -g verteilen_node\n# use command ctn to start the client\nverteilen_node\n</code></pre> <p>First time running</p> <p>If you're running verteilen_node the first time  It will trying to download the worker executable first</p>"},{"location":"user/installation/#desktop-app-install","title":"Desktop App Install","text":"<p>In Release page</p> <ul> <li>For windows user click .msi installation file</li> <li>For linux user click .deb installation file</li> </ul>"},{"location":"user/installation/#docker-install","title":"Docker Install","text":"<p>Here is the quick deploy for compute node docker container</p> <pre><code>docker run --restart=always -p 12080:12080 --name verteilen_node0 e87870823/verteilen_node\n</code></pre> <p>Here is the quick deploy for compute server docker container</p> <pre><code>docker run --restart=always -p 11080:11080 -p 11777:11777 --name verteilen_server0 e87870823/verteilen_server\n</code></pre>"},{"location":"user/job/","title":"Job","text":""},{"location":"user/parameter/","title":"Parameter","text":""},{"location":"user/project/","title":"Project","text":""},{"location":"user/task/","title":"Task","text":""},{"location":"user/workflow/","title":"Workflow","text":"<p>Let's just put this image here for overview  This is the entire project content, which contain several layers</p> <p></p>"},{"location":"user/workflow/#project","title":"Project","text":"<p>The project container, you can put name and description in here, just easy to manage.</p>"},{"location":"user/workflow/#task","title":"Task","text":"<p>This probably the most important part, defining tasks  A project can have multiple task  Every task can have different flags  Currently Verteilen support 3 flags</p> <ul> <li>Setup</li> <li>Cluster</li> <li>Multithread</li> </ul> <p>No Flag Scenario</p> <p>The backend will pick only one compute node, and run the task, then it will mark it as finish</p>"},{"location":"user/workflow/#setup","title":"Setup","text":"<p>You want every compute node run once</p> <p>Compute Node Offline Scenario</p> <p>If one of the compute node is offline, backend will keep waiting for it to back online to do the task</p>"},{"location":"user/workflow/#cluster","title":"Cluster","text":"<p>Base on the input number, it will create a queue, and run it one by one, until all the subtask finish  Subtesk create base on the input number, if input is 5, then it will have 5 subtask create</p>"},{"location":"user/workflow/#multithread","title":"Multithread","text":"<p>Base on the input number, It will set the thread running upper-limit for a single compute node  If the input is 4, and if cluster flag is on as well, then a single node can run 4 subtasks at once</p> <p>This is useful for low compute task such as small file converting or apply metadata for a video file</p>"},{"location":"user/workflow/#job","title":"Job","text":"<p>The content of the task  A task can have multiple jobs</p> <p>By the way, Verteilen currently support use Javascript VM to write the logic here</p>"},{"location":"user/workflow/#expression","title":"Expression","text":""},{"location":"user/workflow/#parameter","title":"Parameter","text":""}]}